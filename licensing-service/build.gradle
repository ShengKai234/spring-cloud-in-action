buildscript {
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'com.palantir.docker'

group = 'com.thoughtmechanix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.2")
	set('resilience4j.version', "2.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
		exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-ribbon'
		exclude group: 'com.netflix.ribbon', module: 'ribbon-eureka'
	}
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation "io.github.resilience4j:resilience4j-spring-boot2"
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.springframework.security:spring-security-rsa'
	implementation 'org.postgresql:postgresql:42.3.1'
	implementation 'org.testng:testng:7.1.0'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
}

docker {
    name "${project.name}:${project.version}"
	tags 'latest'
    files (
		bootJar.archiveFile,
		'src/main/docker/run.sh'
	)
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs([
		'JAR_FILE': "${bootJar.archiveName}",
		'SHELL_FILE': "run.sh",
		'SPRING_PROFIKES_ACTIVE': 'dev'])
}
// sudo docker run -e SPRING_PROFIKES_ACTIVE=dev -d --name licensing-dev -p 8080:8080 licensing-service:0.0.1-SNAPSHOT && sudo docker logs licensing-dev -f