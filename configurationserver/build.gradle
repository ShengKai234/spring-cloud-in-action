buildscript {
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'com.palantir.docker'

group = 'com.thoughtmechanix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
}

// docker {
//     name "${project.name}:${project.version}"
// 	tags 'latest'
//     files (
// 		bootJar.archiveFile,
// 		'src/main/docker/run.sh'
// 	)
//     dockerfile file('src/main/docker/Dockerfile')
//     buildArgs([BUILD_VERSION: project.version])
// }

docker {
    name "${project.name}:${project.version}"
	tags 'latest'
    files (
		bootJar.archiveFile,
		'src/main/docker/run.sh'
	)
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs(['JAR_FILE': "${bootJar.archiveName}", 'SHELL_FILE': "run.sh"])
}
// sudo docker run -d --name configurationserver -p 8888:8888 configurationserver:0.0.1-SNAPSHOT && sudo docker logs configurationserver -f